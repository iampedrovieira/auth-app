name: CI/CD

on: [push]

jobs:
  lint_and_test:
    name: Code Quality
    runs-on: ubuntu-latest
    container:
      image: docker:latest
      options: --privileged
    strategy:
      matrix:
        job: [lint, unit-tests, integration-tests]
    
    env:
      API_PORT: 3000
      DATABASE_PROVIDER: postgres
      DATABASE_HOST: db
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: auth-api-ci-cd
      DATABASE_PORT: 5432
      ENVIRONMENT: -dev

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
  
    - name: Verify Docker Installation
      run : |
        docker --version
        docker-compose --version

    - name: Build docker image
      working-directory: Docker
      run: |
       docker-compose -f docker-compose.yml build
    
    - name: Build docker image
      working-directory: Docker
      run: |
       docker-compose -f docker-compose.yml up -d
    
    - name: Run ${{ matrix.job }}
      working-directory: Docker
      run: |
          if [ "${{ matrix.job }}" == "lint" ]; then
            docker-compose exec app sh -c "npm run lint"
          elif [ "${{ matrix.job }}" == "unit-tests" ]; then
            docker-compose exec app sh -c "npm run test:unit"
          elif [ "${{ matrix.job }}" == "integration-tests" ]; then
            docker-compose exec app sh -c "npm run test:e2e"
          fi
      #continue-on-error: true

  build:
    name: Build Job
    runs-on: ubuntu-latest
    container:
      image: docker:latest
      options: --privileged
    
    env:
      API_PORT: 3000
      DATABASE_PROVIDER: postgres
      DATABASE_HOST: db
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: auth-api-ci-cd
      DATABASE_PORT: 5432
      ENVIRONMENT: -build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
  
    - name: Verify Docker Installation
      run : |
        docker --version
        docker-compose --version

    - name: Build docker image
      working-directory: Docker
      run: |
       docker-compose -f docker-compose.yml build
    
    - name: Build docker image
      working-directory: Docker
      run: |
       docker-compose -f docker-compose.yml up -d

  deploy:
    runs-on: ubuntu-latest
    name: Deploy Job
    needs: [lint_and_test, build]
    container:
      image: docker:latest
      options: --privileged
    
    env:
      API_PORT: 3000
      DATABASE_PROVIDER: postgres
      DATABASE_HOST: db
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: auth-api-ci-cd
      DATABASE_PORT: 5432
      ENVIRONMENT: -build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
  
    - name: Verify Docker Installation
      run : |
        docker --version
        docker-compose --version

    - name: Build docker image (in the future create a real deploy job)
      working-directory: Docker
      run: |
       docker-compose -f docker-compose-deploy.yml build
    
    - name: Build docker image
      working-directory: Docker
      run: |
       docker-compose -f docker-compose-deploy.yml up -d

name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: docker:latest
      options: --privileged
    
    env:
      API_PORT: 3000
      DATABASE_PROVIDER: postgres
      DATABASE_HOST: db
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: auth-api-ci-cd
      DATABASE_PORT: 5432
      PROJECT_ROOT: ${{ github.workspace }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
  
    - name: Verify Docker Installation
      working-directory: Docker
      run : |
        docker --version
        docker-compose --version

    - name: Check workspace path
      working-directory: ${{ github.workspace }}
      run: ls -la

    - name: Set up Docker Compose
      run: |
        cd ${{ github.workspace }}/Docker && docker-compose up

    - name: Check Docker Compose services status
      working-directory: Docker
      run: docker volume ls

    - name: Check Docker Compose logs
      working-directory: Docker
      run: docker-compose logs app
    
    - name: Wait for app service to be up
      working-directory: ${{ github.workspace }}/Docker
      run: |
        timeout=180
        elapsed=0
        interval=5
        while ! docker-compose exec app sh -c "ls -la /usr/src/app"; do
          if [ $elapsed -ge $timeout ]; then
            echo "Timeout reached. The app service did not start within 3 minutes."
            exit 1
          fi
          echo "Waiting for app service to be up..."
          sleep $interval
          elapsed=$((elapsed + interval))
        done
    
    - name: Check docker volume
      working-directory: Docker
      run: docker-compose exec app sh -c "ls -la /usr/src/app"

    - name: Check memory usage
      run: docker stats --no-stream

    - name: Check docker volume
      working-directory: Docker
      run: docker-compose exec app sh -c "ls"

    - name: Install Dependencies
      working-directory: Docker
      run: docker-compose exec app sh -c "npm install"
    
    - name: Run Linter
      working-directory: Docker
      run: docker-compose exec app sh -c "npm run lint"
      continue-on-error: true
      
    - name: Run Unit Tests
      working-directory: Docker
      run: docker-compose exec app sh -c "npm run test:unit"

    - name: Run Integration Tests
      working-directory: Docker
      run: docker-compose exec app sh -c "npm run test:e2e"
